p DevOps is a growing movement that encourages closer collaboration of developers and system operations to help business goals to be achieved efficiently and on time. Software development and infrastructure scaling are very fast-paced nowadays. That brings a necessity of larger automation, measurement and information sharing for all involved processes.

p This 2-day workshop focuses on solving challenges that organisations face when implementing DevOps initiatives. It introduces principles of DevOps and tools that help reach full automation of infrastructure provisioning and software delivery. Theoretical background as well as practical hands-on examples of tools like Ansible, Docker, AWS, Terraform, Kubernetes, Serverless and many others are given during this workshop.

h2 Highlights

ul
	li The course is based on real-world experiences implementing automation and DevOps initiatives.

	li The course includes practical Lab work.

	li The course material is continuously updated to follow latest trends in automation tooling.

	li The course will show many tools in action including Jenkins, ELK, ServerSpec, Docker, Terraform, Kubernetes, Serverless.

	li The course runs in a small group with a lot of discussion and experience exchange.

	li Attendees will receive the optional coding assignment for skill polishing. Homework will be reviewed and supplemented by constructive feedback.

	li Attendees will receive references to documents, books, videos and GitHub projects for continuous, independent self-development.

h2 Coverage

ul
	li
		strong Introduction to DevOps: 
		| The story, Problems, Main principles
	li
		strong Team work: 
		| DevOps team topologies, Unplanned work, Making work visible, KanBan for Ops, Site Reliability Engineers
	li
		strong Automation is the key: 
		| Why to automate? What to automate? How to automate? When to not automate? Automation arguments?
	li
		strong Continuous X: 
		| Continuous Integration, Continuous Deployment, Continuous Delivery, Relation to DevOps, Lean, and Agile
	li
		strong Configuration management: 
		| Metadata management, Maturity model, Service Discovery, Configuration Servers, GitOps
	li
		strong Infrastructure automation:  
		| Managing environments, Developerâ€™s machine, From development to production, Infrastructure scaling, Mean time to recovery, Servers vs. Serverless, Software Defined Networks (SDN), SDx (Software Defined Everything)
	li
		strong Cloud infrastructure:  
		| Public clouds, Private clouds, Cloud Economics, Cloud Security, IaaS (infrastructure as a service), PaaS (platform as a service), CaaS (container as a service), FaaS (function as a service)
	li
		strong Tooling:  
		| Local development, Infrastructure connectivity, Infrastructure provisioning, Infrastructure testing, Infrastructure monitoring
	li
		strong Lab work: 
		| Git, Vagrant, Packer, Bash/Fabric, Puppet/Ansible, ServerSpec, Jenkins/GitLab-CI/Bamboo, Docker, Terraform, AWS, Kubernetes, Serverless, ELK

