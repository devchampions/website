p If you are serious about your code, you must respect it and be confident about it. How can you be confident about it, if it is not covered with a proper set of tests? How can you trust it if you don't have an instant feedback loop? If you keep asking these questions, the course is for you. 
p Beside of a ton of other goodies, a pragmatic testing strategy can shape a great architecture, eliminate your fear to change codebase, deliver features and touch legacy stuff with an amazing level of confidence.
p This 2-day practical workshop dives deep into the unit and especially integration testing in .NET/.NET Core world. We will start from scratch and finish up with advanced approaches pragmatic practitioners apply. Real world examples are guaranteed.
h2 Topics covered in this course include:
  h3 
    strong Test-Driven Development Essentials
  h3 
    strong Defining Different Kind of Tests: 
h4 Unit Tests
h4 Integration Tests
h4 Start With the End in Mind: Practicing Acceptance Tests
  h3 
    strong Properties of Good Unit Tests
  h3 
    strong Properties of Good Integration Tests
  h3 
    strong Frameworks Overview: 
h4 XUnit
h4 NUnit
h4 Unit Testing Specifics in .NET Core

  h3 
    strong Diving Into Different Testing Techniques: 
h4 Value-based testing
h4 State-based testing
h4 Interaction testing

  h3 
    strong Diving Into Different Testing Techniques: 
h4 Leverage Unit Tests to Improve Code Design
h4 A Notion of Dependency Injection
h4 Difference Between Mocks, Stubs, Shims
h4 Mocking Techniques
h4 Mocking Frameworks

  h3 
    strong An Anatomy of a Testâ€™s Lifecycle: 
h4 Arrange part (Including Different Frameworks - Autofixure, etc.)
h4 Act Part
h4 Assert part Including Different Frameworks - Shoudly, etc.)
  h3
    strong Turn Business Requirements into .NET Code and Read Them as a Book with SpecFlow (Cucumber for .NET, BDD)
  h3 
    strong UI Automation with Selenium: 
h4 Selenium 101
h4 Selenium Patterns
h4 Using Page Object Pattern to Drastically Improve Quality of Your Tests
h4 Taking Page Object technique to the Next Level of Readability via Fluent Interfaces
h4 Introduce Metrics to Grade Your Selenium Tests
h4 Selenium Dockerization
h4 Starting up Standalone Selenium Nodes
h4 Building Selenium-Grid cluster
h4 Advanced Automation Technique for Responsive Apps
h4 Getting Into Tools for Automated Visual Testing
h4 Leverage "Gauge" to Write Your Specifications in Markdown
h4 Touching HPE LeanFt Framework
h4 Different Kind of Test Data Strategies
h4 Parallelize Selenium Tasks with Akka.NET

  h3 
    strong Integration Testing Infrastructural Patterns: 
h4 Dedicated Integration Environments
h4 Ad-hoc with .NET Core Built-in Web Servers and Entity Framework InMemory Database Provider

  h3 
    strong Putting It All Together: 
h4 Building a Complete CI/CD Pipeline for .NET Core Applications
h4 Workflow Philosophy for High Quality standards



