p During this intensive 2-day workshop, you will master essential Agile practices that will help you better understand, manage, and accelerate your software development process. At the end of the course, you’ll have a firm understanding of Agile values and principles, how Scrum, Lean, Kanban, Continuous Delivery, DevOps, eXtreme Programming, and Software Craftsmanship practices fit together, and how to apply and adapt them to your specific environment.

p Even if consider yourself experienced Agilist, practice Scrum, or hold a deck of Agile certificates, upon completion of the masterclass you’ll have much deeper and broader understanding of agility; you’ll also get a lot of inspiration and life-hacks for improving your work environment.

h2 Highlights

ul
    li The course is designed for agile teams of any experience and maturity
    li The course follows "zero cliché policy": expect only real stuff that challenges, inspires, and shakes up
    li The course is full of practical and battle-proven techniques that are easy to customize and apply to your environment
    li This course is based on 15 years of experience helping 60+ small, middle, and large scale companies fix, implement, and succeed with Agile
    li Attendees will receive references to books, blogs, and videos for independent self-development

h2 Coverage

ul
    li 
        strong Back to Agile fundamentals – what Agile is, values, principles, rights and responsibilities of the customer and members of the team
    li 
        strong How to estimate, prioritize, and always deliver on time even when deadlines are tough and stakes are high
    li
        strong How to make Scrum work for you and evolve it as you mature
    li
        strong How to make sense of Scrum roles, daily stand-ups, retrospectives, backlogs, user stories, story points, burn-down charts, velocity &amp; co
    li
        strong How to scale Scrum in a multi-team environment with and without LeSS (Large-Scale Scrum)
    li 
        strong How to level-up your agility with Lean Software Development principles
    li 
        strong How to visualize and optimize work flow with Kanban
    li 
        strong How to measure process efficiency without bringing too much bureaucracy
    li     
        strong How to organize teams and teams of teams for rapid and Continuous Delivery
    li 
        strong How to design and evolve software architecture for maximum agility
    li 
        strong How to perform unit, integration, acceptance testing, and QA
    li
        strong How to manage technical debt, legacy code, and code quality in agile and pragmatic way
    li
        strong How to organize teams, dependencies, and communication between them with fundamental Team Topologies
    li
        strong How essential eXtreme Programming practices, such as continuous integration, code reviews, pairing, refactoring, and TDD enable agility and how to do them well
    li
        strong How Domain-Driven Design and Behavior-Driven Development blends in with Agile
    li
        strong How to complement your agility with The Three Ways of DevOps and The Five Ideals
    li
        strong … and much more!

p &nbsp;

p You’ll also learn what’s wrong with SAFe (Scaled Agile Framework), why Scrum certification rarely helps, how JIRA harms agility, why it’s hard to be a good Product Owner, Scrum Master, and Agile Coach, and why even though 20 years have passed since the creation of Agile Manifesto, eXtreme Programming, and Scrum, most Agile projects are still a total mess. Where did it all go wrong? 

p: strong The course is highly recommended for teams that work together.