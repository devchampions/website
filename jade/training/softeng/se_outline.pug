
h2 Detailed outline

h3 Session 1

ul
  li History of software delivery methodologies
  li Methodology overview: Waterfall, V-model, FDD, RAD, Agile, SEMAT, Cynefin
  li Iterative vs incremental; Flow of value: product vs project
  li Requirement collection and analysis. Functional vs non-functional requirements. Specification by example.
  li Practical exercise: discuss the strengths and weakness of different methodologies

h3 Session 2

ul
  li System design and architecture visualizations (design language and notation overview, diagram types)
  li System design patterns and strategies: Coupling and cohesion; Data flow vs control flow; Up-front vs evolutionary; Top-down vs bottom-up 
  li Design decomposition; Functional and business analysis
  li Practical exercise: draw a system design sketch with several components and data flows

h3 Session 3

ul
  li Overview of modern technical ecosystems: programming languages, runtime engines, frameworks, products 
  li Overview of technologies dominating different layers of typical software system: frontend, backend, databases, integrations, mobile 
  li Practical exercise: based on input parameters evaluate the risks involved in migrating from one platform to another 
  li Introduction to common security principles in software systems

h3 Session 4

ul
  li Introduction to testing methodologies and quality assurance disciplines
  li Introduction to TDD and XP practices
  li Testing pyramid; Quality assurance strategies (testing, security, policies)
  li Testing types: unit, integration, system, functional, acceptance, end-to-end, performance
  li Practical exercise: select the QA model based on input parameters
  li Technical debt and maintainability metrics
  li Refactoring vs redesign planning
  li Introduction to static code analysis 
  li Practical exercise: spot the problem based on given example of technical project data

h3 Session 5

ul
  li Introduction to Continuous Delivery
  li Introduction to DevOps
  li Notes on ITIL and ITSM
  li Infrastructure-as-code, immutable infrastructure, delivery pipelines, GitOps
  li Service-level metrics: SLAs and SLOs
  li Error budgets, mean time to recovery
  li Unplanned work management
  li Practical exercise: propose a solution based on input parameters


