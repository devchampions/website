
h2 Detailed outline

h3 🌞 Day 1

ul
  li
    p 
      strong 📚 Part 1:
    p Introduction and setup check.
  li    
    p 
      strong 🛠 Exercise 1: 
      | We start right away with coding exercise. The task is to code a complex firewall policy logic with some hints and skeleton code. No TDD, just code.  30 minutes will be not enough, but from the task description, most engineers will tell that it is doable in 30 minutes. After failure, we go into discussion mode. 
  li      
    p 
      strong 📚 Part 2:
    p TDD cycle: red, green, refactor. 
    p Overview of Python unittest library. 
  li    
    p 
      strong 🛠 Exercise 2: 
      | Implement the same task with firewall policy, but using a TDD cycle by writing unit tests (with hints).
    p Looking at the test coverage. 
  li    
    p ❓ Quiz 1: TDD principles.
  li    
    p 
      strong 📚 Part 3:
    p Overview of Python mocking libraries.   
  li    
    p 
      strong 🛠 Exercise 3: 
      | Build on top of firewall policy logic and add integration with firewall log storage. Mock the storage and access logic.
    p Commit/push to Git + verify that code builds and tests run in CI. Discussion about the importance of automatic feedback. 
    p Code review session. Trainer takes the code of several students and reviews it live with giving recommendations.
  li    
    p 
      strong 📚 Part 4:
    p Clean code principles for Python. 
    p Integration tests vs unit tests.
    p Introduction to ATDD and double feedback loop.
    p Overview of Docker and Python implementation of testcontainers.  
  li    
    p  
      strong 🛠 Exercise 4:
      | Implement integration tests with a real database for firewall log storage and query. Make sure they run in CI.  
  li      
    p ❓ Quiz 2: Mocking, integration tests.

h3 🌞 Day 2

ul
  li
    p 
      strong 📚 Part 5:
    p Introduction into pair programming.
    p Overview of Python requests library.
  li    
    p 
      strong 🛠 Exercise 5: 
      | Split into pairs. Implement firewall management API with Flask from a template. Add HTTP API acceptance tests. 
  li      
    p 
      strong 📚 Part 6:
    p Introduction into BDD.
    p Overview of Python behave library.
  li    
    p 
      strong 🛠 Exercise 6: 
      | Re-implement acceptance tests with the BDD approach. 
  li      
    p ❓ Quiz 3: ATDD, BDD. 
  li    
    p 
      strong 📚 Part 7:
    p Introduction to performance testing.
    p Overview of Python faker library for test data generation.
    p Overview of Python locust library for the performance test suite.
  li    
    p 
      strong 🛠 Exercise 7:
      | Implement a performance test suite for firewall components.
  li      
    p ❓ Quiz 4: Performance testing. 
  li    
    p ❓ Final Quiz.
  li    
    p Q/A + conclusion.
